<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.faithyee.androidlearningdemo">

    <!-- 网络访问权限 -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- 检查网络变化 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- 允许程序连接到已配对的蓝牙设备 -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <!-- 允许程序发现和配对蓝牙设备 -->
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
        android:name=".AppAplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- 服务管理页 -->
        <activity
            android:name=".ui.service.ServiceDemoAct"
            android:theme="@style/AppTheme" />

        <!-- 广播管理页 -->
        <activity
            android:name=".ui.broadcast.BroadcastDemoAct"
            android:theme="@style/AppTheme" />

        <!-- 本地服务 -->
        <service android:name=".service.LocalService" />

        <!-- 远程服务 -->
        <service
            android:name=".service.RemoteService"
            android:exported="true"
            android:process=":remote">
            <intent-filter>
                <action android:name="com.faithyee.androidlearningdemo.service.RemoteService" />
            </intent-filter>
        </service>

        <!-- 自定义广播:静态注册 -->
        <!-- 优先级的设定 ，优先级的范围-1000~1000 -->
        <receiver android:name=".brocast.MyReceiver">
            <intent-filter android:priority="10">
                <action android:name="com.faithyee.androidlearningdemo.brocast.MyReceiver" />
            </intent-filter>
        </receiver>

        <!-- 测试拦截广播,测试拦截，需要两个广播的action名一致，都需要有priority优先级，并且要比没拦截的广播权重高 -->
        <receiver
            android:name=".brocast.MyAbortReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter android:priority="100">
                <action android:name="com.faithyee.androidlearningdemo.brocast.MyReceiver" />
            </intent-filter>
        </receiver>

        <activity android:name=".ui.sqlite.SqliteDemoAct" />
        <activity android:name=".ui.blueTooth.BlueToothDemoAct" />
        <activity android:name=".ui.network.NetworkDemoAct" />
        <activity android:name=".ui.volley.VolleyDemoAct" />
        <activity android:name=".ui.okhttp.OkhttpDemoAct" />
        <activity android:name=".ui.retrofit.RetrofitDemoAct" />
        <activity android:name=".ui.rxjava.RxJavaDemoAct" />
        <activity android:name=".ui.rxjava.RxJavaPracticeAct" />
        <activity android:name=".ui.cache.CacheDemoAct" />
        <activity android:name=".ui.eventBus.EventBusDemoAct" />
        <activity android:name=".ui.eventBus.EventBusSecondAct" />
        <activity android:name=".ui.otto.OttoDemoAct" />
        <activity android:name=".ui.otto.OttoSecondAct" />
        <activity android:name=".ui.otto.OttoProduceDemoAct" />
        <activity android:name=".ui.mvp.MvpDemoAct" />
        <activity android:name=".ui.dagger2.Dagger2DemoAct" />
        <activity android:name=".ui.view.ViewDemoActivity"></activity>
    </application>

</manifest>